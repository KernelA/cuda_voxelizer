# This is a basic workflow to help you get started with Actions

name: windows-build-test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      cuda-version:
        description: 'CUDA version. For example: 10.1, 10.2'
        required: true
        default: '10.1'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: windows-2019
    env:
      CUDA_ARCH: 30
      CUDA_PATH_V10_1: 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1'
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        ref: universal-cmake
    - name: Install CUDA 10.1
      run: |
        Invoke-WebRequest http://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_426.00_win10.exe -OutFile .\cuda.exe
        Start-Process -FilePath .\cuda.exe -ArgumentList "-s","nvcc_10.1","cudart_10.1","visual_studio_integration_10.1" -Wait -NoNewWindow
        rm .\cuda.exe

    - name: Install GLM
      run: |
        vcpkg.exe install glm:x64-windows

    - name: Cache Trimesh2
      id: trimesh2-cache
      uses: actions/cache@v2
      with:
        path: '..\trimesh2-build'
        key: ${{ runner.os }}-build-trimesh2-cache
   
    - name: Build Trimesh2
      if: steps.trimesh2-cache.outputs.cache-hit != 'true'
      run: |
        git clone -b 2020.03.04 https://github.com/Forceflow/trimesh2.git ..\trimesh2
        cd ..\trimesh2
        & 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe' .\msvc\vs2019\trimesh2.sln -nologo -m:2 /t:libsrc /p:Configuration=Release /p:Platform=x64
        mkdir ..\trimesh2-build
        Move-Item .\include ..\trimesh2-build
        Move-Item .\lib.Win64.vs142 ..\trimesh2-build
        cd -
        rm -Recurse -Force ..\trimesh2

    - name: Build cuda_voxelizer
      run: |
        $trimeshDir = "..\trimesh2-build"
        mkdir .\build
        & cmake -A x64 -DCMAKE_TOOLCHAIN_FILE:FILEPATH="C:\vcpkg\scripts\buildsystems\vcpkg.cmake" -DTrimesh2_INCLUDE_DIR:PATH="$trimeshDir\include" -DTrimesh2_LINK_DIR:PATH="$trimeshDir\lib.Win64.vs142" -DCUDA_ARCH:STRING=$env:CUDA_ARCH -DCMAKE_BUILD_TYPE=Release -S . -B .\build
        & cmake --build .\build -j 2 --target ALL_BUILD --config Release
    - name: Test cuda_voxelizer
      run: .\build\Release\cuda_voxelizer.exe -f .\test_models\bunny.OBJ -s 64 -cpu


